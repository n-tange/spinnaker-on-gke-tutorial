# halyard-cli command completion

_hal() {
    local cur prev ptr
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    if [[ "${prev}" == -* ]]; then
        local options sublen
        if [ -z "${cur}" ]; then
            # strip just the --flag from the query
            sublen=$(($COMP_CWORD - 1))
        else
            # strip the --flag and value from the query
            sublen=$(($COMP_CWORD - 2))
        fi

        options=$( ${COMP_WORDS[@]:0:$sublen} --options $prev --color false --quiet )

        if [ "$?" = "0" ]; then
            COMPREPLY=( $(compgen -W "${options}" -- ${cur}) )
            return 0
        fi
    fi


    ptr="${COMP_WORDS[0]}"

    if [ "${ptr}" = "hal" ]; then

        if [ "1" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --print-bash-completion --ready --log --output --debug --docs --quiet --alpha --help --options --color --version --daemon-endpoint"
            subcommands=" admin backup config deploy shutdown spin task version"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "admin" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" deprecate publish"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "deprecate" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" version"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "version" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --version --log --output --color --debug --daemon-endpoint --quiet --illegal-reason --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "publish" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" bom latest latest-halyard latest-spinnaker profile version"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "bom" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --bom-path --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "latest" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "latest-halyard" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "latest-spinnaker" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "profile" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --bom-path --help --options --log --output --color --debug --profile-path --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "version" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --version --changelog --debug --quiet --alpha --help --alias --options --color --minimum-halyard-version --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "backup" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" create restore"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "create" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "restore" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --backup-path --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "config" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --set-current-deployment --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" artifact canary ci deploy edit features generate list metric-stores notification provider pubsub security storage version webhook"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "artifact" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" bitbucket gcs github gitlab helm http oracle s3"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "bitbucket" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --username --password --quiet --alpha --help --deployment --options --color --daemon-endpoint --username-password-file"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --password --username-password-file --username --log --output --debug --no-validate --quiet --alpha --help --deployment --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "gcs" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --json-path --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --json-path --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "github" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --username --log --output --debug --no-validate --username-password-file --password --token-file --quiet --alpha --help --deployment --options --color --token --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --token-file --log --output --debug --no-validate --quiet --alpha --help --deployment --options --token --username --color --password --username-password-file --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "gitlab" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --token --log --output --debug --no-validate --quiet --alpha --help --deployment --token-file --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --help --deployment --options --color --token --token-file --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "helm" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --repository --help --deployment --options --color --username --username-password-file --password --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --username --password --log --output --debug --no-validate --repository --quiet --alpha --help --deployment --options --color --daemon-endpoint --username-password-file"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "http" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --username --debug --password --no-validate --quiet --alpha --help --deployment --options --color --username-password-file --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --help --deployment --options --color --username --username-password-file --password --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "oracle" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --private-key-passphrase --debug --no-validate --quiet --region --alpha --namespace --help --deployment --options --ssh-private-key-file-path --color --user-id --fingerprint --daemon-endpoint --tenancy-id"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --tenancy-id --ssh-private-key-file-path --log --output --region --debug --no-validate --private-key-passphrase --quiet --alpha --help --deployment --options --color --user-id --namespace --fingerprint --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "s3" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --api-region --log --output --debug --api-endpoint --aws-secret-access-key --no-validate --region --quiet --alpha --help --deployment --options --color --aws-access-key-id --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --api-endpoint --log --output --debug --no-validate --quiet --alpha --help --deployment --aws-secret-access-key --options --region --color --api-region --daemon-endpoint --aws-access-key-id"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "canary" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" aws datadog disable edit enable google prometheus signalfx"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "aws" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --bucket --log --output --debug --no-validate --quiet --root-folder --alpha --help --deployment --endpoint --options --access-key-id --secret-access-key --region --color --profile-name --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --profile-name --log --output --region --debug --root-folder --no-validate --quiet --endpoint --alpha --access-key-id --help --deployment --options --color --secret-access-key --bucket --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --s3-enabled --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "datadog" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --base-url --log --output --debug --no-validate --quiet --alpha --help --deployment --application-key --options --api-key --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --application-key --no-validate --quiet --alpha --help --deployment --options --base-url --color --api-key --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --show-all-configs-enabled --default-metrics-account --quiet --default-judge --templates-enabled --alpha --stages-enabled --help --deployment --options --atlasWebComponentsUrl --color --default-metrics-store --default-storage-account --daemon-endpoint --redux-logger-enabled"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "google" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --project --json-path --log --output --debug --no-validate --bucket --bucket-location --quiet --alpha --help --deployment --options --root-folder --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --json-path --log --output --project --bucket-location --debug --no-validate --bucket --quiet --alpha --help --deployment --options --color --root-folder --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --metadata-caching-interval-ms --log --output --debug --no-validate --quiet --alpha --help --deployment --stackdriver-enabled --options --gcs-enabled --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "prometheus" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --base-url --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --base-url --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --metadata-caching-interval-ms --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "signalfx" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --access-token --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --access-token --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "ci" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" jenkins travis wercker"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "jenkins" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable enable master"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "master" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --address --help --deployment --username --options --csrf --color --password --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --password --csrf --log --output --address --debug --no-validate --quiet --alpha --help --deployment --options --color --username --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "travis" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable enable master"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "master" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --github-token --log --output --debug --number-of-repositories --no-validate --quiet --alpha --address --help --deployment --options --color --base-url --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --address --log --output --debug --no-validate --base-url --quiet --alpha --help --deployment --options --color --github-token --number-of-repositories --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "wercker" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable enable master"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "master" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --address --help --deployment --user --token --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --token --log --output --debug --no-validate --quiet --alpha --help --deployment --options --color --address --user --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "deploy" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit ha"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --consul-enabled --git-origin-user --log --output --debug --bootstrap-only --consul-address --vault-enabled --location --no-validate --quiet --alpha --account-name --help --deployment --options --update-versions --color --type --vault-address --git-upstream-user --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "ha" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" clouddriver echo"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "clouddriver" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --redis-slave-deck-endpoint --quiet --alpha --help --deployment --options --redis-slave-endpoint --redis-master-endpoint --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "echo" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --timezone --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "features" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --pipeline-templates --log --output --travis --wercker --debug --no-validate --chaos --quiet --infrastructure-stages --alpha --jobs --help --deployment --options --mine-canary --color --appengine-container-image-url-deployments --daemon-endpoint --artifacts"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "generate" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "list" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "metric-stores" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" datadog edit prometheus stackdriver"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "datadog" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --add-tag --log --output --app-key --debug --remove-tag --no-validate --api-key --quiet --alpha --help --deployment --tags --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --period --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "prometheus" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --push-gateway --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "stackdriver" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --credentials-path --log --output --debug --zone --no-validate --quiet --alpha --project --help --deployment --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "notification" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" slack"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "slack" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --help --deployment --bot-name --options --token --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "provider" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" appengine aws azure dcos docker-registry ecs google kubernetes openstack oracle"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "appengine" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --git-https-password --project --no-validate --quiet --alpha --environment --help --deployment --git-https-username --options --write-permissions --ssh-trust-unknown-hosts --color --ssh-private-key-file-path --ssh-known-hosts-file-path --omit-versions --gcloud-release-track --required-group-membership --json-path --read-permissions --services --log --output --debug --local-repository-directory --github-oauth-access-token --versions --omit-services --provider-version --ssh-private-key-passphrase --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --git-https-password --add-required-group-membership --no-validate --remove-write-permission --quiet --alpha --json-path --services --help --deployment --options --read-permissions --versions --ssh-private-key-passphrase --remove-required-group-membership --github-oauth-access-token --color --add-write-permission --ssh-known-hosts-file-path --project --gcloud-release-track --add-read-permission --log --output --debug --local-repository-directory --git-https-username --ssh-trust-unknown-hosts --write-permissions --provider-version --omit-services --required-group-membership --remove-read-permission --ssh-private-key-file-path --environment --omit-versions --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "aws" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account bakery disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --required-group-membership --edda --regions --read-permissions --log --output --debug --discovery --account-id --no-validate --quiet --alpha --environment --help --deployment --provider-version --options --write-permissions --color --default-key-pair --assume-role --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --edda --default-key-pair --add-required-group-membership --no-validate --remove-write-permission --quiet --discovery --account-id --alpha --help --deployment --options --read-permissions --remove-required-group-membership --color --add-write-permission --regions --remove-region --add-read-permission --log --output --debug --write-permissions --add-region --provider-version --required-group-membership --remove-read-permission --environment --daemon-endpoint --assume-role"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "bakery" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --aws-subnet-id --aws-associate-public-ip-address --log --output --aws-vpc-id --debug --no-validate --aws-secret-key --default-virtualization-type --quiet --alpha --help --deployment --options --aws-access-key --color --template-file --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --secret-access-key --debug --no-validate --quiet --alpha --help --deployment --options --access-key-id --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "azure" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account bakery disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --packer-resource-group --tenant-id --no-validate --quiet --alpha --client-id --app-key --environment --help --deployment --options --write-permissions --color --default-key-vault --default-resource-group --subscription-id --required-group-membership --read-permissions --log --output --debug --provider-version --object-id --packer-storage-account --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --object-id --default-resource-group --add-required-group-membership --no-validate --tenant-id --client-id --remove-write-permission --quiet --alpha --help --deployment --app-key --options --read-permissions --remove-required-group-membership --color --add-write-permission --packer-storage-account --packer-resource-group --add-read-permission --log --output --debug --write-permissions --subscription-id --provider-version --required-group-membership --remove-read-permission --default-key-vault --environment --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "bakery" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" base-image edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "base-image" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "add" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --image-version --debug --no-validate --offer --quiet --template-file --alpha --short-description --help --deployment --publisher --options --sku --package-type --color --daemon-endpoint --detailed-description"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --short-description --detailed-description --no-validate --quiet --template-file --alpha --offer --help --deployment --options --image-version --color --publisher --sku --id --package-type --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "get" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "list" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "dcos" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account cluster disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --required-group-membership --service-key-file --uid --read-permissions --log --output --debug --cluster --no-validate --quiet --alpha --docker-registries --environment --help --deployment --provider-version --options --password --write-permissions --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --add-docker-registry --add-required-group-membership --no-validate --remove-write-permission --quiet --alpha --help --deployment --options --update-service-credential --read-permissions --remove-docker-registry --remove-required-group-membership --color --add-write-permission --remove-credential --add-read-permission --log --output --debug --write-permissions --update-user-credential --provider-version --required-group-membership --remove-read-permission --docker-registries --environment --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "cluster" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --skip-tls-verify --ca-cert-file --log --output --lb-account-secret --debug --lb-image --no-validate --quiet --alpha --dcos-url --help --deployment --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --set-skip-tls-verify --dcos-url --no-validate --quiet --alpha --ca-cert-file --help --deployment --options --color --remove-lb --remove-ca-cert-file --lb-account-secret --lb-image --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "docker-registry" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --insecure-registry --repositories --no-validate --quiet --alpha --password-command --environment --help --deployment --cache-threads --options --sort-tags-by-date --track-digests --write-permissions --color --paginate-size --password-file --client-timeout-millis --required-group-membership --email --read-permissions --log --output --address --debug --password --provider-version --username --cache-interval-seconds --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --paginate-size --address --add-required-group-membership --password-command --no-validate --remove-write-permission --quiet --alpha --sort-tags-by-date --help --deployment --options --read-permissions --client-timeout-millis --remove-required-group-membership --color --add-write-permission --insecure-registry --track-digests --add-read-permission --log --output --password --repositories --debug --add-repository --write-permissions --provider-version --required-group-membership --email --remove-read-permission --username --cache-interval-seconds --environment --cache-threads --password-file --daemon-endpoint --remove-repository"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "ecs" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --required-group-membership --read-permissions --log --output --debug --no-validate --quiet --alpha --environment --help --deployment --provider-version --options --write-permissions --color --daemon-endpoint --aws-account"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --add-read-permission --log --output --add-required-group-membership --debug --no-validate --write-permissions --aws-account --remove-write-permission --quiet --provider-version --alpha --required-group-membership --help --deployment --options --remove-read-permission --read-permissions --remove-required-group-membership --color --add-write-permission --environment --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "google" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account bakery disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --required-group-membership --alpha-listed --project --read-permissions --log --output --json-path --regions --debug --no-validate --quiet --alpha --image-projects --environment --help --deployment --provider-version --options --write-permissions --user-data --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --json-path --add-required-group-membership --set-alpha-listed --no-validate --image-projects --user-data --remove-write-permission --quiet --remove-region --alpha --help --deployment --options --read-permissions --remove-required-group-membership --color --add-write-permission --regions --add-read-permission --log --output --debug --write-permissions --add-image-project --provider-version --project --required-group-membership --remove-read-permission --environment --add-region --daemon-endpoint --remove-image-project"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "bakery" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" base-image edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "base-image" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "add" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --is-image-family --log --output --debug --no-validate --quiet --template-file --alpha --short-description --help --deployment --source-image --options --package-type --color --source-image-family --daemon-endpoint --detailed-description"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --source-image --log --output --debug --short-description --is-image-family --detailed-description --no-validate --quiet --source-image-family --template-file --alpha --help --deployment --options --color --id --package-type --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "get" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "list" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --network --log --output --template-file --use-internal-ip --debug --no-validate --quiet --alpha --network-project-id --help --deployment --zone --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --default-regions --log --output --debug --no-validate --add-default-region --quiet --alpha --help --deployment --options --remove-default-region --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "kubernetes" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --kubeconfig-file --configure-image-pull-secrets --oauth-scopes --namespaces --omit-namespaces --only-spinnaker-managed --no-validate --quiet --alpha --environment --help --deployment --kinds --options --write-permissions --omit-kinds --color --check-permissions-on-startup --context --required-group-membership --read-permissions --log --output --debug --oauth-service-account --docker-registries --provider-version --service-account --skin --naming-strategy --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --add-namespace --remove-kind --remove-omit-kind --no-validate --alpha --help --oauth-scopes --options --read-permissions --context --namespaces --clear-context --add-docker-registry --oauth-service-account --omit-kinds --log --naming-strategy --add-omit-namespace --remove-omit-namespace --add-omit-kind --service-account --docker-registries --environment --daemon-endpoint --add-kind --remove-namespace --skin --add-oauth-scope --kinds --add-required-group-membership --remove-write-permission --quiet --deployment --kubeconfig-file --remove-oauth-scope --configure-image-pull-secrets --remove-required-group-membership --color --omit-namespaces --add-write-permission --add-read-permission --output --debug --write-permissions --provider-version --only-spinnaker-managed --required-group-membership --remove-read-permission --all-namespaces --all-kinds --check-permissions-on-startup --remove-docker-registry"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "openstack" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account bakery disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --regions --no-validate --project-name --quiet --alpha --auth-url --environment --help --deployment --lbaas-poll-interval --options --write-permissions --color --required-group-membership --consul-config --domain-name --lbaas-poll-timeout --read-permissions --account-type --log --output --debug --provider-version --insecure --username --heat-template-location --daemon-endpoint --user-data-file --password"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --remove-region --user-data-file --domain-name --add-required-group-membership --lbaas-poll-timeout --no-validate --project-name --remove-write-permission --quiet --alpha --password --help --deployment --options --read-permissions --add-region --remove-required-group-membership --color --add-write-permission --heat-template-location --insecure --add-read-permission --log --output --debug --write-permissions --account-type --consul-config --provider-version --required-group-membership --remove-read-permission --username --regions --lbaas-poll-interval --environment --daemon-endpoint --auth-url"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "bakery" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" base-image edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "base-image" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "add" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --source-image-id --log --output --debug --no-validate --region --quiet --template-file --alpha --short-description --help --deployment --options --package-type --ssh-user-name --color --daemon-endpoint --instance-type --detailed-description"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --region --log --output --debug --short-description --detailed-description --no-validate --quiet --source-image-id --template-file --alpha --help --deployment --options --color --ssh-user-name --id --package-type --daemon-endpoint --instance-type"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "get" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "list" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --password --log --output --security-groups --debug --username --no-validate --auth-url --insecure --quiet --alpha --help --deployment --project-name --options --color --domain-name --template-file --network-id --daemon-endpoint --floating-ip-pool"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "oracle" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" account bakery disable enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "account" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --required-group-membership --region --read-permissions --log --output --debug --no-validate --fingerprint --quiet --alpha --environment --help --deployment --provider-version --options --write-permissions --color --ssh-private-key-file-path --compartment-id --private-key-passphrase --user-id --daemon-endpoint --tenancyId"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --region --fingerprint --add-required-group-membership --no-validate --remove-write-permission --quiet --alpha --help --deployment --options --read-permissions --remove-required-group-membership --color --add-write-permission --tenancyId --add-read-permission --log --output --debug --compartment-id --write-permissions --provider-version --required-group-membership --remove-read-permission --private-key-passphrase --environment --daemon-endpoint --user-id --ssh-private-key-file-path"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "bakery" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" base-image edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "base-image" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "add" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --base-image-id --log --output --ssh-user-name --debug --no-validate --quiet --template-file --alpha --short-description --help --deployment --options --package-type --color --daemon-endpoint --detailed-description"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --ssh-user-name --log --output --debug --short-description --detailed-description --no-validate --quiet --template-file --alpha --base-image-id --help --deployment --options --color --id --package-type --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "get" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[6]}"

    if [ "${ptr}" = "list" ]; then

        if [ "7" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --instance-shape --log --output --debug --no-validate --subnet-id --quiet --alpha --help --deployment --options --availability-domain --color --template-file --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "pubsub" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" google"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "google" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable enable subscription"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "subscription" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" add delete edit get list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "add" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --ack-deadline-seconds --message-format --debug --no-validate --quiet --alpha --help --deployment --project --options --template-path --subscription-name --color --json-path --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "delete" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --template-path --no-validate --ack-deadline-seconds --message-format --quiet --alpha --help --deployment --options --json-path --color --project --subscription-name --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "get" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "list" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "security" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" api authn authz ui"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "api" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit ssl"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --cors-access-pattern --debug --no-validate --quiet --alpha --help --deployment --override-base-url --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "ssl" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --keystore --keystore-type --truststore-type --log --output --key-alias --client-auth --debug --keystore-password --no-validate --quiet --alpha --truststore --help --deployment --options --color --truststore-password --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "authn" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" iap ldap oauth2 saml x509"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "iap" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --iap-verify-key-url --issuer-id --log --output --jwt-header --debug --audience --no-validate --quiet --alpha --help --deployment --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "ldap" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --url --user-search-filter --quiet --alpha --help --deployment --options --user-dn-pattern --user-search-base --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "oauth2" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --user-info-mapping-username --client-id --client-authentication-scheme --no-validate --quiet --alpha --help --deployment --options --color --user-info-uri --pre-established-redirect-uri --user-info-mapping-first-name --log --output --debug --user-info-requirements --user-info-mapping-email --user-info-mapping-last-name --provider --user-authorization-uri --access-token-uri --scope --client-secret --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "saml" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --keystore-password --keystore --log --output --debug --keystore-alias --no-validate --quiet --service-address-url --alpha --help --deployment --options --metadata --color --daemon-endpoint --issuer-id"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "x509" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --subject-principal-regex --log --output --debug --no-validate --quiet --alpha --help --deployment --role-oid --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "authz" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable file github google ldap"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --type --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "file" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --file-path --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "github" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --accessToken --no-validate --baseUrl --quiet --alpha --help --deployment --options --color --organization --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "google" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --quiet --alpha --help --deployment --options --color --credential-path --domain --daemon-endpoint --admin-username"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "ldap" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --group-role-attributes --url --user-search-base --log --output --manager-password --debug --no-validate --manager-dn --quiet --alpha --group-search-base --help --deployment --options --user-dn-pattern --color --group-search-filter --daemon-endpoint --user-search-filter"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "ui" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit ssl"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --override-base-url --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "ssl" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --ssl-certificate-passphrase --log --output --debug --no-validate --quiet --alpha --help --deployment --ssl-certificate-key-file --options --ssl-certificate-file --color --daemon-endpoint --ssl-certificate-ca-file"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[5]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "6" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "storage" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" azs edit gcs oracle s3"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "azs" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --storage-container-name --quiet --storage-account-name --alpha --help --deployment --options --storage-account-key --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --type --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "gcs" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --project --debug --no-validate --quiet --alpha --help --deployment --root-folder --options --json-path --color --bucket --bucket-location --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "oracle" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --region --log --output --namespace --compartment-id --tenancy-id --debug --private-key-passphrase --no-validate --quiet --bucket-name --alpha --help --deployment --fingerprint --options --color --user-id --ssh-private-key-file-path --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "s3" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --region --log --output --debug --no-validate --bucket --quiet --alpha --help --deployment --root-folder --assume-role --options --endpoint --color --secret-access-key --daemon-endpoint --access-key-id"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "version" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" edit"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --version --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "webhook" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" trust"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[3]}"

    if [ "${ptr}" = "trust" ]; then

        if [ "4" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=" disable edit enable"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "disable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "edit" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --no-validate --trustStorePassword --quiet --alpha --trustStore --help --deployment --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[4]}"

    if [ "${ptr}" = "enable" ]; then

        if [ "5" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "deploy" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" apply clean collect-logs connect details diff rollback"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "apply" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --flush-infrastructure-caches --exclude-service-names --auto-run --log --output --debug --no-validate --quiet --alpha --help --deployment --options --service-names --prep-only --delete-orphaned-services --color --omit-config --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "clean" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "collect-logs" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --log --output --debug --exclude-service-names --no-validate --quiet --alpha --help --deployment --options --service-names --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "connect" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --auto-run --log --output --debug --no-validate --service-names --quiet --alpha --help --deployment --options --color --daemon-endpoint"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "details" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --service-name --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "diff" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "rollback" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --service-names --log --output --debug --no-validate --quiet --alpha --help --deployment --options --color --daemon-endpoint --exclude-service-names"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "shutdown" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "spin" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" install"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "install" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --auto-run --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "task" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" interrupt list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "interrupt" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "list" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi


    ptr="${COMP_WORDS[1]}"

    if [ "${ptr}" = "version" ]; then

        if [ "2" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=" bom latest list"

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        
    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "bom" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --artifact-name --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "latest" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --options --log --output --color --debug --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi


    ptr="${COMP_WORDS[2]}"

    if [ "${ptr}" = "list" ]; then

        if [ "3" -eq "$COMP_CWORD" ]; then

            local flags subcommands

            flags=" --help --deployment --options --log --output --color --debug --no-validate --daemon-endpoint --quiet --alpha"
            subcommands=""

            if [[ "${cur}" == -* ]]; then
                COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
                return 0
            fi

            COMPREPLY=( $(compgen -W "${subcommands}" -- ${cur}) )
            return 0

        else

        :

        fi

    fi



        fi

    fi



        fi

    fi


}

complete -F _hal hal
